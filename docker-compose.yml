networks:
  elk:
    driver: bridge

services:

  db:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: example
      MYSQL_USER: example
      MYSQL_PASSWORD: example
    ports:
      - "3306:3306"
    # Elastic search 설정
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.16
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    # Elastic search 계정정보
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.transport.ssl.enabled: false
      xpack.ml.use_auto_machine_memory_percent: true
#      ELASTIC_PASSWORD: "elastic123!@#"
    networks:
      - elk

  # Logstash 설정
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.17.16
    ports:
      - "5001:5001"
      - "9600:9600"
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - elk

  # Kibana 설정
  kibana:
    container_name: kibana
    image: kibana:7.17.16
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearchx2
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elk
#  backend:
#    container_name: my-spring-app
#    build: .
#    ports:
#      - "8080:8080"
#    environment:
#      db-url: jdbc:postgresql://db:5432/example
#      db-username: postgres
#      db-password: postgres
#    depends_on:
#      - logstash
#    networks:
#      - elk
